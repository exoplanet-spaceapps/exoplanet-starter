<!DOCTYPE html>
<html lang="zh-Hant">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AI 核心狀態中心</title>
    <!-- 引入 Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- 引入 Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- 引入 Google Fonts - Orbitron (遊戲/科幻風格) -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&display=swap" rel="stylesheet">
    
    <style>
        /* 自定義樣式 */
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        @keyframes scan {
            0% { background-position: 0 0; }
            100% { background-position: 50px 0; }
        }

        body {
            font-family: 'Orbitron', sans-serif;
            background-color: #0d1117;
            background-image: 
                radial-gradient(circle at 1px 1px, rgba(255,255,255,0.05) 1px, transparent 0),
                radial-gradient(circle at 20px 20px, rgba(255,255,255,0.05) 1px, transparent 0);
            background-size: 40px 40px;
            color: #c9d1d9;
        }

        .hud-panel {
            background-color: rgba(13, 17, 23, 0.9);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(59, 130, 246, 0.3);
            box-shadow: 0 0 15px rgba(59, 130, 246, 0.1);
            clip-path: polygon(0 20px, 20px 0, calc(100% - 20px) 0, 100% 20px, 100% calc(100% - 20px), calc(100% - 20px) 100%, 20px 100%, 0 calc(100% - 20px));
            animation: fadeIn 1s ease-out;
        }

        .hud-title {
            color: #58a6ff;
            text-shadow: 0 0 8px rgba(59, 130, 246, 0.7);
        }
        
        .action-button {
            background-color: rgba(59, 130, 246, 0.2);
            border: 1px solid #3b82f6;
            color: #93c5fd;
            transition: all 0.3s ease;
            clip-path: polygon(0 5px, 5px 0, calc(100% - 5px) 0, 100% 5px, 100% calc(100% - 5px), calc(100% - 5px) 100%, 5px 100%, 0 calc(100% - 5px));
        }
        .action-button:hover:not(:disabled) {
            background-color: #3b82f6;
            color: white;
            box-shadow: 0 0 20px #3b82f6;
        }
        .action-button:disabled {
            opacity: 0.4;
            cursor: not-allowed;
            background-color: rgba(55, 65, 81, 0.2);
            border-color: #4b5563;
        }
        
        .progress-bar-inner {
            background: linear-gradient(90deg, rgba(59, 130, 246, 0) 0%, rgba(59, 130, 246, 0.8) 50%, rgba(59, 130, 246, 0) 100%);
            animation: scan 2s linear infinite;
            background-size: 50px 100%;
        }
        
        .state-panel { display: none; }
        .state-panel.active { display: flex; }
    </style>
</head>
<body class="antialiased p-4 md:p-8 flex items-center justify-center min-h-screen">

    <div class="container mx-auto max-w-4xl">
        <!-- 標題 -->
        <header class="text-center mb-8">
            <h1 class="text-3xl md:text-5xl font-bold text-white mb-2 tracking-widest hud-title">AI ANALYSIS CONSOLE</h1>
            <p class="text-sm md:text-base text-gray-400 max-w-2xl mx-auto uppercase tracking-wider">
                Exoplanet Candidate Detection System
            </p>
        </header>

        <!-- 主分析控制台 -->
        <div class="hud-panel p-8">

            <!-- 階段一: 上傳區 -->
            <div id="upload-state" class="state-panel active flex-col items-center text-center">
                <h2 class="text-2xl font-bold hud-title mb-4">AWAITING MISSION DATA</h2>
                <p class="text-gray-400 mb-8">請上傳包含目標 ID 的 .csv 檔案以開始分析。</p>
                
                <div class="flex flex-col items-center gap-6 w-full max-w-md">
                    <label for="csv-upload" class="action-button w-full font-bold py-4 px-6 rounded-md cursor-pointer text-center text-lg">
                        SELECT .CSV FILE
                    </label>
                    <input type="file" id="csv-upload" accept=".csv" class="hidden">
                    <p id="file-name" class="text-gray-400 h-6">No file selected.</p>
                    <button id="analyze-button" class="action-button w-full font-bold py-4 px-6 rounded-md text-lg" disabled>
                        INITIATE ANALYSIS
                    </button>
                </div>
            </div>
            
            <!-- 階段二: 分析中 -->
            <div id="analysis-state" class="state-panel hidden flex-col items-center text-center">
                <h2 class="text-2xl font-bold hud-title mb-4">ANALYSIS IN PROGRESS...</h2>
                <p id="analysis-file-name" class="text-gray-400 mb-8">Processing data from: </p>
                <div class="w-full bg-gray-900 border border-blue-800 rounded-full h-8 p-1 mb-2">
                    <div id="progress-bar" class="bg-blue-600 h-full rounded-full transition-all duration-300 ease-linear relative overflow-hidden">
                         <div class="progress-bar-inner absolute top-0 left-0 w-full h-full"></div>
                    </div>
                </div>
                <p id="analysis-status" class="text-lg text-yellow-400 h-8">Initializing AI Core...</p>
            </div>

            <!-- 階段三: 結果 -->
            <div id="results-state" class="state-panel hidden flex-col items-center text-center">
                <h2 class="text-2xl font-bold hud-title mb-4">ANALYSIS COMPLETE</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-8 w-full items-center">
                    <div class="text-center">
                        <p class="uppercase text-gray-400">Candidates Identified</p>
                        <p id="candidates-found" class="text-8xl font-bold text-green-400" style="text-shadow: 0 0 15px rgba(45, 212, 191, 0.7);"></p>
                        <p id="total-analyzed" class="text-lg text-gray-500"></p>
                    </div>
                    <div>
                         <div class="relative w-full h-48">
                            <canvas id="resultsChart"></canvas>
                        </div>
                    </div>
                </div>
                <div class="w-full mt-8 pt-6 border-t border-gray-700">
                     <h3 class="text-lg font-bold hud-title mb-4">HIGH-PROBABILITY TARGETS</h3>
                     <ul id="candidates-list" class="text-left space-y-2 text-gray-300 max-w-sm mx-auto">
                        <!-- JS will populate this -->
                     </ul>
                </div>
                <button id="reset-button" class="action-button mt-8 font-bold py-3 px-8 rounded-md text-lg">
                    ANALYZE NEW DATA
                </button>
            </div>
            
        </div>
    </div>

    <script>
        // --- UI 元素 ---
        const uploadState = document.getElementById('upload-state');
        const analysisState = document.getElementById('analysis-state');
        const resultsState = document.getElementById('results-state');
        
        const fileInput = document.getElementById('csv-upload');
        const fileNameDisplay = document.getElementById('file-name');
        const analyzeButton = document.getElementById('analyze-button');
        
        const analysisFileName = document.getElementById('analysis-file-name');
        const progressBar = document.getElementById('progress-bar');
        const analysisStatus = document.getElementById('analysis-status');
        
        const candidatesFoundDisplay = document.getElementById('candidates-found');
        const totalAnalyzedDisplay = document.getElementById('total-analyzed');
        const candidatesList = document.getElementById('candidates-list');
        const resultsChartCtx = document.getElementById('resultsChart').getContext('2d');
        const resetButton = document.getElementById('reset-button');

        let resultsChart;

        // --- 互動邏輯 ---
        fileInput.addEventListener('change', () => {
            if (fileInput.files.length > 0) {
                const fileName = fileInput.files[0].name;
                fileNameDisplay.textContent = `File selected: ${fileName}`;
                analyzeButton.disabled = false;
            }
        });

        analyzeButton.addEventListener('click', () => {
            if (fileInput.files.length > 0) {
                // 切換到分析階段
                uploadState.classList.remove('active');
                analysisState.classList.add('active');
                resultsState.classList.remove('active');
                
                analysisFileName.textContent = `Processing data from: ${fileInput.files[0].name}`;
                
                // 模擬分析過程
                let progress = 0;
                analysisStatus.textContent = 'Calibrating sensors... 0%';
                progressBar.style.width = '0%';
                
                const interval = setInterval(() => {
                    progress += Math.floor(Math.random() * 10) + 5;
                    if (progress > 100) progress = 100;
                    
                    progressBar.style.width = `${progress}%`;
                    analysisStatus.textContent = `Scanning sector... ${progress}%`;

                    if (progress >= 100) {
                        clearInterval(interval);
                        analysisStatus.textContent = 'Finalizing results...';
                        setTimeout(showResults, 1000);
                    }
                }, 400);
            }
        });
        
        resetButton.addEventListener('click', () => {
             // 重置 UI
            uploadState.classList.add('active');
            analysisState.classList.remove('active');
            resultsState.classList.remove('active');

            fileInput.value = '';
            fileNameDisplay.textContent = 'No file selected.';
            analyzeButton.disabled = true;
        });

        function showResults() {
             analysisState.classList.remove('active');
             resultsState.classList.add('active');

             // 模擬結果
             const totalTargets = 100;
             const found = 7;
             const topCandidates = [
                 { id: 'TIC 7562528', prob: 0.97 },
                 { id: 'TIC 107782586', prob: 0.95 },
                 { id: 'TIC 7548817', prob: 0.92 }
             ];
             
             candidatesFoundDisplay.textContent = found;
             totalAnalyzedDisplay.textContent = `out of ${totalTargets} targets analyzed`;
             
             // 填充候選列表
             candidatesList.innerHTML = '';
             topCandidates.forEach(c => {
                 const li = document.createElement('li');
                 li.className = 'flex justify-between items-center bg-gray-800/50 p-2 rounded';
                 li.innerHTML = `<span>${c.id}</span><span class="font-bold text-green-400">${(c.prob * 100).toFixed(1)}%</span>`;
                 candidatesList.appendChild(li);
             });
             
             // 繪製結果圖表
             if (resultsChart) {
                 resultsChart.destroy();
             }
             resultsChart = new Chart(resultsChartCtx, {
                type: 'doughnut',
                data: {
                    labels: ['Candidates', 'Negative'],
                    datasets: [{
                        data: [found, totalTargets - found],
                        backgroundColor: ['rgba(22, 163, 74, 0.7)', 'rgba(55, 65, 81, 0.5)'],
                        borderColor: '#0d1117',
                        borderWidth: 4,
                    }]
                },
                options: {
                    responsive: true, maintainAspectRatio: false,
                    cutout: '70%',
                    plugins: { 
                        legend: { display: false },
                        tooltip: { enabled: true },
                    },
                }
            });
        }
        
    </script>

</body>
</html>

